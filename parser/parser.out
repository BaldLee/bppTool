Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AA
    AF
    AND
    EA
    EG
    LBRACE
    MINUS
    NOT
    OR
    RBRACE
    SEMICOLON

Grammar

Rule 0     S' -> test
Rule 1     test -> atom
Rule 2     variables -> VAR
Rule 3     variables -> variables COMMA VAR
Rule 4     rules -> rule
Rule 5     rules -> rules rule
Rule 6     rule -> LBRACK VAR COMMA ACT COMMA LPAREN variables RPAREN RBRACK
Rule 7     atom -> plusexpes GE NUMBER
Rule 8     plusexpes -> VAR
Rule 9     plusexpes -> plusexpes PLUS VAR

Terminals, with rules where they appear

AA                   : 
ACT                  : 6
AF                   : 
AND                  : 
COMMA                : 3 6 6
EA                   : 
EG                   : 
GE                   : 7
LBRACE               : 
LBRACK               : 6
LPAREN               : 6
MINUS                : 
NOT                  : 
NUMBER               : 7
OR                   : 
PLUS                 : 9
RBRACE               : 
RBRACK               : 6
RPAREN               : 6
SEMICOLON            : 
VAR                  : 2 3 6 8 9
error                : 

Nonterminals, with rules where they appear

atom                 : 1
plusexpes            : 7 9
rule                 : 4 5
rules                : 5
test                 : 0
variables            : 3 6

Parsing method: LALR

state 0

    (0) S' -> . test
    (1) test -> . atom
    (7) atom -> . plusexpes GE NUMBER
    (8) plusexpes -> . VAR
    (9) plusexpes -> . plusexpes PLUS VAR

    VAR             shift and go to state 4

    test                           shift and go to state 1
    atom                           shift and go to state 2
    plusexpes                      shift and go to state 3

state 1

    (0) S' -> test .



state 2

    (1) test -> atom .

    $end            reduce using rule 1 (test -> atom .)


state 3

    (7) atom -> plusexpes . GE NUMBER
    (9) plusexpes -> plusexpes . PLUS VAR

    GE              shift and go to state 5
    PLUS            shift and go to state 6


state 4

    (8) plusexpes -> VAR .

    GE              reduce using rule 8 (plusexpes -> VAR .)
    PLUS            reduce using rule 8 (plusexpes -> VAR .)


state 5

    (7) atom -> plusexpes GE . NUMBER

    NUMBER          shift and go to state 7


state 6

    (9) plusexpes -> plusexpes PLUS . VAR

    VAR             shift and go to state 8


state 7

    (7) atom -> plusexpes GE NUMBER .

    $end            reduce using rule 7 (atom -> plusexpes GE NUMBER .)


state 8

    (9) plusexpes -> plusexpes PLUS VAR .

    GE              reduce using rule 9 (plusexpes -> plusexpes PLUS VAR .)
    PLUS            reduce using rule 9 (plusexpes -> plusexpes PLUS VAR .)

